# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-25 21:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(db_column='DocID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='TitleDescriptive', max_length=255)),
                ('literal_title', models.TextField(db_column='Title')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='Updated')),
                ('image_count', models.IntegerField(db_column='NoOfImages')),
            ],
            options={
                'managed': False,
                'db_table': 'tblDoc',
            },
        ),
        migrations.CreateModel(
            name='DocumentActivity',
            fields=[
                ('id', models.AutoField(db_column='ActivityID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Activity', max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'tblActivities',
            },
        ),
        migrations.CreateModel(
            name='DocumentCase',
            fields=[
                ('id', models.AutoField(db_column='CaseID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Case_temp', max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'tblCases',
            },
        ),
        migrations.CreateModel(
            name='DocumentDate',
            fields=[
                ('id', models.AutoField(db_column='DatesOfDocListID', primary_key=True, serialize=False)),
                ('day', models.IntegerField(db_column='DocDay')),
                ('month', models.IntegerField(db_column='DocMonthID')),
                ('year', models.IntegerField(db_column='DocYear')),
            ],
            options={
                'managed': False,
                'db_table': 'tblDatesOfDocList',
            },
        ),
        migrations.CreateModel(
            name='DocumentDefendant',
            fields=[
                ('id', models.AutoField(db_column='DefendantID', primary_key=True, serialize=False)),
                ('last_name', models.CharField(db_column='DefLName', max_length=110)),
                ('first_name', models.CharField(db_column='DefFName', max_length=25)),
                ('case', models.IntegerField(db_column='CaseID')),
            ],
            options={
                'managed': False,
                'db_table': 'tblDefendants',
            },
        ),
        migrations.CreateModel(
            name='DocumentGroupAuthor',
            fields=[
                ('id', models.AutoField(db_column='GroupAuthorID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='GroupAuthorName', max_length=25)),
            ],
            options={
                'managed': False,
                'db_table': 'tblGroupAuthors',
            },
        ),
        migrations.CreateModel(
            name='DocumentImageType',
            fields=[
                ('id', models.AutoField(db_column='PageTypeID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='PageType', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'tblPageTypes',
            },
        ),
        migrations.CreateModel(
            name='DocumentLanguage',
            fields=[
                ('id', models.AutoField(db_column='LanguageID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Language', max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'tblLanguages',
            },
        ),
        migrations.CreateModel(
            name='DocumentPersonalAuthor',
            fields=[
                ('id', models.AutoField(db_column='PersonalAuthorID', primary_key=True, serialize=False)),
                ('last_name', models.CharField(db_column='AuthLName', max_length=35)),
                ('first_name', models.CharField(db_column='AuthFName', max_length=25)),
                ('title', models.CharField(db_column='AuthTitle', max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'tblPersonalAuthors',
            },
        ),
        migrations.CreateModel(
            name='DocumentSource',
            fields=[
                ('id', models.AutoField(db_column='VersionID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Version', max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'tblVersions',
            },
        ),
        migrations.CreateModel(
            name='DocumentsToActivities',
            fields=[
                ('id', models.AutoField(db_column='ActivitiesListID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'tblActivitiesList',
            },
        ),
        migrations.CreateModel(
            name='DocumentsToCases',
            fields=[
                ('id', models.AutoField(db_column='CasesListID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'tblCasesList',
            },
        ),
        migrations.CreateModel(
            name='DocumentsToDefendants',
            fields=[
                ('id', models.AutoField(db_column='DefendantsListID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'tblDefendantsList',
            },
        ),
        migrations.CreateModel(
            name='DocumentsToGroupAuthors',
            fields=[
                ('id', models.AutoField(db_column='GroupAuthorsListID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'tblGroupAuthorsList',
            },
        ),
        migrations.CreateModel(
            name='DocumentsToPersonalAuthors',
            fields=[
                ('id', models.AutoField(db_column='PersonalAuthorsListID', primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'tblPersonalAuthorsList',
            },
        ),
        migrations.CreateModel(
            name='OldDocumentImage',
            fields=[
                ('id', models.AutoField(db_column='ImagesListID', primary_key=True, serialize=False)),
                ('page_number', models.IntegerField(db_column='PageSequenceNo')),
                ('physical_page_number', models.CharField(db_column='PhysicalPageNo', max_length=50)),
                ('filename', models.CharField(blank=True, db_column='FileName', max_length=8, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'tblImagesList',
            },
        ),
        migrations.CreateModel(
            name='DocumentImage',
            fields=[
                ('id', models.AutoField(db_column='ImagesListID', primary_key=True, serialize=False)),
                ('page_number', models.IntegerField()),
                ('physical_page_number', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('scale', models.CharField(choices=[('t', 'thumb'), ('h', 'half'), ('s', 'screen'), ('d', 'double'), ('f', 'full')], max_length=1)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='images', to='documents.Document')),
                ('image_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.DocumentImageType')),
            ],
        ),
    ]
